{"version":3,"sources":["dealManagement.js","App.js","serviceWorker.js","index.js"],"names":["DealForm","assets","transformDeal","deal","tenant","descriptionLabel","size","map","a","name","join","transformResponse","dealResponse","Header","Layout","Content","Footer","Search","Input","Step","Steps","deals","searchedAssets","request","path","method","response","json","includes","httpClient","server","perform","dealManagement","dealForm","errors","selectableAssets","resetDealForm","this","assetSearchResults","save","invalidExplanation","validate","push","newDeal","Object","assign","params","searchForAssets","searchText","results","draft","length","viewDeals","error","viewAssets","StateContext","createContext","Deal","props","Item","Meta","title","DealListHeader","type","onClick","showNewDealForm","DealList","itemLayout","bordered","dataSource","header","renderItem","useContext","state","updateState","useState","currentStep","setCurrentStep","selectedAssets","setSelectedAssets","steps","content","layout","label","asset","hasFeedback","validateStatus","isAssetSearchLoading","placeholder","onSearch","draftState","setTimeout","onDone","style","cursor","handleAsset","message","value","onChange","handleSize","handleTenant","next","prev","event","target","saveDeal","isDealModalVisible","hideForm","nextButtonEnabled","undefined","selectedAsset","visible","onCancel","closable","okText","footer","disabled","current","item","key","marginTop","App","setState","updateFunc","nextState","produce","appState","useEffect","onViewDealsDone","onViewAssetsDone","Provider","position","zIndex","width","theme","mode","defaultSelectedKeys","lineHeight","padding","margin","background","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2d46686.chunk.js","sourcesContent":["function DealForm() {\n  return {\n    assets: []\n  };\n}\n\nfunction assetString(assets) {\n  if (!assets) {\n    return \"none\";\n  }\n  return assets.map(a => a.name).join(\", \")\n}\n\nfunction transformDeal(deal) {\n  return {\n    tenant: deal.tenant,\n    descriptionLabel: `Size: ${deal.size} | Assets: ${assetString(deal.assets)}`\n  };\n}\n\nfunction transformResponse(dealResponse) {\n  return dealResponse.map(transformDeal);\n}\n\nlet makeDealManagement = (server) => {\n  return {\n    dealForm: new DealForm(),\n    deals: [],\n    errors: [],\n    tenant: null,\n    selectableAssets: [],\n    server,\n    resetDealForm() {\n      this.dealForm = new DealForm();\n      this.errors = [];\n      this.assetSearchResults = [];\n    },\n    save() {\n      let invalidExplanation = this.validate();\n      if (invalidExplanation) {\n        this.errors.push(invalidExplanation);\n        return;\n      } else {\n        this.errors = [];\n      }\n\n      let newDeal = Object.assign({}, this.dealForm);\n\n      this.deals.push(transformDeal(newDeal));\n      let request = {\n        path: '/deals',\n        method: \"POST\",\n        params: newDeal,\n      };\n      server.perform(request);\n    },\n    async searchForAssets(searchText) {\n      let request = {\n        path: `/assets?search=${searchText}`,\n        method: \"GET\"\n      };\n      let results = await server.perform(request);\n      return (draft) => draft.selectableAssets = results;\n    },\n\n    validate() {\n      if (this.dealForm.assets.length === 0) {\n        return \"Deals must be tied to at least one asset\"\n      }\n\n      return null;\n    },\n    async viewDeals() {\n      let dealResponse = await server.perform({ path: '/deals.json', method: \"GET\" });\n      if (dealResponse.error) {\n        return (draft) => { \n          draft.dealResponse = [];\n          draft.errors = [dealResponse.error];\n        }\n      }\n\n      let deals = transformResponse(dealResponse)\n      return (draft) => { draft.deals = deals }\n    },\n    async viewAssets() {\n      let assets = await server.perform({ path: '/assets.json', method: \"GET\" });\n      return (draft) => { draft.selectableAssets = assets }; \n    }\n  };\n};\n\nlet makeServer = (httpClient) => {\n  return {\n    async perform(request) {\n      return httpClient(request);\n    }\n  };\n};\n\nexport { makeDealManagement, makeServer };\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { Alert, Button, Form, Input, Layout, List, Menu, Modal, Steps } from 'antd';\nimport produce from 'immer';\n\nimport { makeDealManagement, makeServer } from './dealManagement.js';\n\nconst { Header, Content, Footer } = Layout;\nconst { Search } = Input;\nconst { Step } = Steps;\n\nlet assets = [\n  { name: 'Asset 1' },\n  { name: 'Asset 2' }\n];\n\nlet deals = [\n  { tenant: 'JCPenny', size: 100 },\n  { tenant: 'Starbucks', size: 200 },\n  { tenant: 'H&M', size: 300 },\n  { tenant: 'Blue Bottle', size: 400, assets: assets }\n];\n\nlet searchedAssets = [\n  { name: 'Asset 1' }\n];\n\nasync function stubHttpClient(request) {\n  if (request.path === '/deals.json' && request.method === 'GET') {\n    return deals;\n\n    let response = await fetch('/deals.json')\n    return await response.json();\n  } else if (request.path.includes('/assets?search')) {\n    return searchedAssets;\n  } else if (request.path.includes('/assets')) {\n    return assets;\n  }\n\n  return [];  \n}\n\nlet server = makeServer(stubHttpClient);\nlet dealManagement = makeDealManagement(server);\n\nconst StateContext = createContext();\n\nfunction Deal(props) {  \n  return <List.Item>\n    <List.Item.Meta title={props.deal.tenant} />\n    {props.deal.descriptionLabel}\n  </List.Item>;\n}\n\nfunction DealListHeader(props) {\n  return <Button type=\"default\" onClick={props.showNewDealForm}>\n    Add deal\n  </Button>\n}\n\nfunction DealList(props) {\n  return <List\n    itemLayout=\"vertical\"\n    bordered\n    dataSource={props.deals}\n    header={<DealListHeader showNewDealForm={props.showNewDealForm}/>}\n    renderItem={ deal => (\n      <Deal deal={deal} />\n    )}\n  />\n}\n\nfunction DealForm(props) {\n  let [state, updateState] = useContext(StateContext);\n  let [currentStep, setCurrentStep] = useState(0);\n  let [selectedAssets, setSelectedAssets] = useState([]);\n\n  const steps = [\n    {\n      title: 'Select assets',\n      content: <SelectAssetsStep />\n    },\n    {\n      title: 'Enter details',\n      content: <Form layout=\"vertical\">\n        <Form.Item label=\"Size\">\n          <Input placeholder=\"Size\" value={state.dealManagement.dealForm.size} onChange={handleSize}/>\n        </Form.Item>        \n        <Form.Item label=\"Tenant\">\n          <Input placeholder=\"Tenant\" value={state.dealManagement.dealForm.tenant} onChange={handleTenant}/>              \n        </Form.Item>\n      </Form>\n    },\n    {\n      title: 'Review',\n      content: <ReviewStep />,\n    },\n  ];\n\n  function SelectAssetsStep() {\n    function searchForAssets(searchText) {\n      updateState(draftState => { draftState.isAssetSearchLoading = true });\n      setTimeout(async () => {\n        let onDone = await state.dealManagement.searchForAssets(searchText);\n        updateState(draftState => {\n          draftState.isAssetSearchLoading= false;\n          onDone(draftState.dealManagement);\n        });\n      }, 1000);\n    }    \n\n    return <Form layout=\"vertical\">\n      <Form.Item label=\"Selected\">\n        <List\n          itemLayout=\"vertical\"\n          bordered\n          dataSource={selectedAssets}\n          renderItem={ asset => (\n            <List.Item>{asset.name}</List.Item>\n          )}\n        />\n      </Form.Item>\n      <Form.Item hasFeedback validateStatus={assetSearchValidateStatus()}>\n        <Search placeholder=\"Search for assets\" onSearch={searchForAssets} />\n      </Form.Item>\n    \n      <Form.Item label=\"Your assets\">\n        <List\n          itemLayout=\"vertical\"\n          bordered\n          dataSource={state.dealManagement.selectableAssets}\n          renderItem={ asset => (\n            <List.Item style={{ cursor: 'pointer '}} onClick={() => handleAsset(asset)}>{asset.name}</List.Item>\n          )}\n        />\n      </Form.Item>\n\n      { state.dealManagement.errors.length > 0 ? <Alert message={state.dealManagement.errors[0]} type=\"error\" /> : null }\n    </Form>\n  }\n\n  function ReviewStep() {\n    return <div>\n      <Form layout=\"vertical\">\n        <Form.Item label=\"Selected assets\">\n          <List\n            itemLayout=\"vertical\"\n            bordered\n            dataSource={selectedAssets}\n            renderItem={ asset => (\n              <List.Item>{asset.name}</List.Item>\n            )}\n          />\n        </Form.Item>\n\n        <h4>Details</h4>\n        <Form.Item label=\"Size\">\n          <Input placeholder=\"Size\" value={state.dealManagement.dealForm.size} onChange={handleSize}/>\n        </Form.Item>        \n        <Form.Item label=\"Tenant\">\n          <Input placeholder=\"Tenant\" value={state.dealManagement.dealForm.tenant} onChange={handleTenant}/>              \n        </Form.Item>\n      </Form>\n    </div>\n  }\n\n  function next() {\n    setCurrentStep(currentStep + 1);\n  }\n\n  function prev() {\n    setCurrentStep(currentStep - 1);\n  }\n\n  function handleSize(event) {\n    let size = event.target.value;\n    updateState(draftState => { draftState.dealManagement.dealForm.size = size });\n  }\n\n  function handleAsset(asset) {\n    setSelectedAssets([asset, ...selectedAssets]);\n    updateState(draftState => { draftState.dealManagement.dealForm.assets.push(asset) });\n  }\n\n  function handleTenant(event) {\n    let tenant = event.target.value;\n    updateState(draftState => { draftState.dealManagement.dealForm.tenant = tenant });\n  }\n\n  function saveDeal() {\n    updateState(draftState => { \n      draftState.dealManagement.save();\n      draftState.isDealModalVisible = draftState.dealManagement.errors.length !== 0;\n    });\n    setCurrentStep(0);    \n    setSelectedAssets([]);\n  }\n\n  function hideForm() {\n    updateState(draftState => { \n      draftState.isDealModalVisible = false;\n    });\n    setCurrentStep(0);\n    setSelectedAssets([]);\n  }  \n\n  function assetSearchValidateStatus() {\n    return state.isAssetSearchLoading ? \"validating\" : \"\";\n  }\n\n  function selectedAsset() {\n    let assets = state.dealManagement.dealForm.assets;\n\n    return assets[0] ? assets[0].name : undefined;\n  }\n\n  function nextButtonEnabled() {\n    if (currentStep === 0) {\n      return selectedAsset();\n    }\n\n    return true;\n  }\n\n  function Footer() {\n    return <div>\n      <Button onClick={hideForm}>Cancel</Button>\n      { currentStep > 0 && <Button onClick={prev}>Previous</Button> }\n      { currentStep < steps.length - 1 && <Button type=\"primary\" disabled={!nextButtonEnabled()} onClick={next} >Next</Button> }\n      { currentStep === steps.length - 1 && <Button type=\"primary\" onClick={saveDeal}>Save</Button> }\n    </div>\n  }\n\n  return <Modal \n    visible={state.isDealModalVisible}\n    onCancel={hideForm}\n    closable={false}\n    okText={\"Next\"}\n    footer={Footer()}>\n      <Steps current={currentStep}>\n        {steps.map(item => (\n          <Step key={item.title} title={item.title} />\n        ))}\n      </Steps>\n      <div style={{ marginTop: '14px' }}>\n        {steps[currentStep].content}\n      </div>\n  </Modal>;\n}\n\nfunction App() {\n  let [state, setState] = useState({ \n    dealManagement, \n    isDealModalVisible: false, \n    isAssetSearchLoading: false\n  });\n\n  function updateState(updateFunc) {\n    let nextState = produce(state, updateFunc);\n    setState(nextState);\n  }\n\n  let appState = [\n    state,\n    updateState\n  ];\n\n  useEffect(() => {\n    let perform = async () => {\n      let onViewDealsDone = await state.dealManagement.viewDeals();\n      let onViewAssetsDone = await state.dealManagement.viewAssets();\n      updateState(draft => {\n        onViewDealsDone(draft.dealManagement);\n        onViewAssetsDone(draft.dealManagement);\n      });    \n    };\n    perform();\n  }, []);\n\n  function showNewDealForm() {\n    updateState(draftState => { \n      draftState.dealManagement.resetDealForm();\n      draftState.isDealModalVisible = true;\n    });\n  }  \n\n  return (\n    <StateContext.Provider value={appState}>\n      <Layout>\n        <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['0']}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"0\">Deal Management</Menu.Item>          \n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px', marginTop: 64 }}>        \n          <DealForm />\n          <div style={ { margin: 24, background: '#fff' } }>          \n            <DealList deals={state.dealManagement.deals} showNewDealForm={showNewDealForm} />\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Deal Manager ©2019 Created by amw-zero</Footer>\n      </Layout>\n    </StateContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}